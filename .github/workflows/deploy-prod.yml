name: Deploy to Production

on:
  push:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "production" to confirm deployment'
        required: true

env:
  GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS_PROD }}
  TF_STATE_BUCKET: my-terraform-state-prod

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Validate confirmation
        if: github.event_name == 'workflow_dispatch'
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "production" ]; then
            echo "Confirmation failed. You must type 'production' to deploy."
            exit 1
          fi

  plan:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - uses: actions/checkout@v4

      - name: Terraform Plan
        uses: ./.github/actions/terraform-apply
        with:
          environment: prod
          working-directory: infrastructure/environments/prod
          apply: 'false'

      - name: Comment Plan on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## Terraform Plan\n```\n${{ steps.plan.outputs.plan-output }}\n```'
            })

  deploy:
    runs-on: ubuntu-latest
    needs: plan
    environment: production  # Requires manual approval
    steps:
      - uses: actions/checkout@v4

      - name: Build and Deploy API
        uses: ./.github/actions/build-docker
        id: build-api
        with:
          service-name: api
          dockerfile-path: services/api/Dockerfile
          context-path: .
          gcp-project-id: ${{ env.GCP_PROJECT_ID }}
          environment: prod

      - name: Apply Infrastructure
        uses: ./.github/actions/terraform-apply
        with:
          environment: prod
          working-directory: infrastructure/environments/prod
          apply: 'true'
          additional-vars: |
            {
              "api_image": "${{ steps.build-api.outputs.image-url }}"
            }
