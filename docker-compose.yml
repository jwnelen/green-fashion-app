version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=dev
      - MONGODB_URI=mongodb://mongo:27017/
      - GCS_PROJECT_ID=${GCS_PROJECT_ID}
      - GCS_BUCKET_DEV=${GCS_BUCKET_DEV:-green-fashion-dev}
      - GCS_BUCKET_PROD=${GCS_BUCKET_PROD:-green-fashion-prod}
    volumes:
      # Mount source code for development
      - ./streamlit_app:/app/streamlit_app:ro
      - ./green_fashion:/app/green_fashion:ro
      # Mount GCS credentials if available
      - ${GCS_CREDENTIALS_PATH:-/dev/null}:/app/gcs-key.json:ro
    depends_on:
      - mongo
    networks:
      - green-fashion-network

  mongo:
    image: mongo:7
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: wardrobe_db
    volumes:
      - mongo_data:/data/db
      - ./deploy/mongo-init:/docker-entrypoint-initdb.d:ro
    networks:
      - green-fashion-network

  # Optional: MongoDB Admin UI
  mongo-express:
    image: mongo-express:latest
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://root:password@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongo
    networks:
      - green-fashion-network
    profiles:
      - admin

volumes:
  mongo_data:

networks:
  green-fashion-network:
    driver: bridge
